{
  "name": "Tale Jade for PHP",
  "tagline": "A complete and fully-functional implementation of the Jade template language for PHP",
  "body": "\r\n# Tale Jade for PHP\r\n\r\n\r\n[![GitHub release](https://img.shields.io/github/release/talesoft/tale-jade.svg?style=flat-square)](https://github.com/Talesoft/tale-jade) [![Travis](https://img.shields.io/travis/Talesoft/tale-jade.svg?style=flat-square)](https://travis-ci.org/Talesoft/tale-jade) [![Packagist](https://img.shields.io/packagist/dt/talesoft/tale-jade.svg?style=flat-square)](https://packagist.org/packages/talesoft/tale-jade) [![HHVM](https://img.shields.io/hhvm/talesoft/tale-jade.svg?style=flat-square)](https://travis-ci.org/Talesoft/tale-jade) [![License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)](https://github.com/Talesoft/tale-jade/blob/master/LICENSE.md) [![Gitter](https://img.shields.io/gitter/room/Talesoft/tale-jade.svg?maxAge=2592000?style=flat-square)](https://gitter.im/Talesoft/tale-jade)\r\n\r\n> **Finally a fully-functional, complete and clean port of the Jade language to PHP**\r\n>\r\n> *â€” Abraham Lincoln*\r\n\r\n\r\nThe Tale Jade Template Engine brings the popular and powerful Templating-Language [Jade for Node.js](http://jade-lang.com) to PHP!\r\n\r\nTale Jade is the first complete and most powerful Jade implementation in PHP.\r\n\r\n---\r\n\r\n## Getting Started\r\n\r\n\r\n### Install with [Composer](https://getcomposer.org)\r\n\r\n[Download Composer](https://getcomposer.org/download/)\r\n\r\nThe composer package for Tale Jade is called [`talesoft/tale-jade`](https://packagist.org/packages/talesoft/tale-jade)\r\n\r\nIf you want to get started right now, hook up [composer](https://getcomposer.org/) and run\r\n\r\n```bash\r\n$ composer require \"talesoft/tale-jade:*\"\r\n$ composer install\r\n```\r\n\r\nor add it to your `composer.json` by yourself\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"talesoft/tale-jade\": \"*\"\r\n    }\r\n}\r\n```\r\n\r\n### Install by downloading the sources\r\n\r\nYou can also download the sources by yourself.\r\n\r\nTale Jade is compatible with the [PSR-0](http://www.php-fig.org/psr/psr-0/) and [PSR-4](http://www.php-fig.org/psr/psr-4/) autoloading standards.\r\n\r\nPut the sources inside your a `Tale/Jade` subfolder inside your autoloading directories, e.g. `library/Tale/Jade` and you're ready to go!\r\n\r\nThe easiest way might be to just put a clone of the repository there, that way you can update it easier\r\n\r\n```bash\r\n$ git clone git@github.com:Talesoft/tale-jade.git library/Tale/Jade\r\n```\r\n\r\nor as a sub-module if you're using git for your project as well\r\n\r\n```bash\r\n$ git submodule add git@github.com:Talesoft/tale-jade.git library/Tale/Jade\r\n```\r\n\r\n\r\n### Rendering a Jade Template\r\n\r\nInclude the `vendor/autoload.php` file of composer in your PHP script and get started with Tale Jade!\r\n\r\n```php\r\n\r\nuse Tale\\Jade;\r\n\r\n//Include the vendor/autoload.php if you're using composer!\r\ninclude('vendor/autoload.php');\r\n\r\n$renderer = new Jade\\Renderer();\r\n\r\necho $renderer->render('your-jade-file');\r\n```\r\n\r\nThis way, the renderer will search for `your-jade-file.jade` in your `get_include_path()`-paths.\r\nNotice that the path passed to `render` should be relative. You can give it absolute paths, but it will make caching harder.\r\n\r\nWe show you how to add alternative search paths further in the **Basic configuration** section below.\r\n\r\nWhen the Jade-file gets rendered, a `./cache/views`-directory is created automatically and the compiled PHTML will be stored in that directory.\r\n\r\nTo change this directory, use the `cache_path`-option\r\n\r\n```php\r\n\r\n$renderer = new Jade\\Renderer([\r\n    'cache_path' => '/your/absolute/cache/path'\r\n]);\r\n```\r\n\r\n\r\nThe Jade-file will now be rendered to that directory on each call.\r\n\r\nTo enable a cache that won't render the files on each call, use the `ttl` option of the `file`-adapter\r\n\r\n\r\n```php\r\n\r\n$renderer = new Jade\\Renderer([\r\n    'ttl' => 3600 //Will cache the file for 3600 seconds (one hour)\r\n]);\r\n```\r\n\r\n\r\n### Basic configuration\r\n\r\n\r\nTo enable formatting of the PHTML-output, use the `pretty`-option\r\n\r\n```php\r\n\r\n$renderer = new Jade\\Renderer([\r\n    'pretty' => true\r\n]);\r\n```\r\n\r\n\r\nIf you don't want to use the `get_include_path()`-paths (which could actually harbor a security risk in some cases), pass your own search paths to the Renderer.\r\nRendered and included Jade-files will be searched in those paths and not in the `get_include_path()`-paths anymore.\r\n\r\n```php\r\n\r\n//Either with\r\n$renderer = new Jade\\Renderer([\r\n    'paths' => [__DIR__.'/views']\r\n]);\r\n\r\n//or with\r\n$renderer->addPath(__DIR__.'/views');\r\n```\r\n\r\nAs soon as you pass *any* path, the loading from the `get_include_path()`-paths will be disabled and you always load from your passed directory/ies.\r\n\r\nTo pass variables to your Jade-file, use the second argument of the `render`-method\r\n\r\n```php\r\n\r\necho $renderer->render('index', [\r\n    'title' => 'Jade is awesome!',\r\n    'content' => 'Oh yeah, it is.'\r\n]);\r\n```\r\n\r\nThese can be used inside Jade as normal variables\r\n\r\n```jade\r\n\r\nh1= $title\r\n\r\n+content-block($content)\r\n```\r\n\r\n\r\n---\r\n\r\n\r\n## Supported features\r\n\r\nTale Jade supports every single feature the [original Jade implementation](http://jade-lang.com/reference/) supports!\r\nThis always has been and will always be the main target.\r\n\r\n**But why stop there?**\r\nPHP has it's own features that are surely different from JavaScript's.\r\nBy utilizing those features it aims to bring in more, compatible features into the language to make the fastest template development ever possible!\r\n\r\n**You can try features and see a bunch of examples on my [sandbox site](http://sandbox.jade.talesoft.codes)**\r\n\r\n### Supported official Node.js Jade Features\r\n\r\n- [Tags](http://sandbox.jade.talesoft.codes)\r\n- [Classes](http://sandbox.jade.talesoft.codes?example=classes)\r\n- [IDs](http://sandbox.jade.talesoft.codes?example=ids)\r\n- [Doctypes](http://sandbox.jade.talesoft.codes?example=html-5)\r\n- [Attributes](http://sandbox.jade.talesoft.codes?example=attributes)\r\n- [Mixins](http://sandbox.jade.talesoft.codes?example=mixins)\r\n- [Blocks](http://sandbox.jade.talesoft.codes?example=blocks)\r\n- [Expressions](http://sandbox.jade.talesoft.codes?example=expressions)\r\n- [Escaping](http://sandbox.jade.talesoft.codes?example=escaping)\r\n- [Block Expansion](http://sandbox.jade.talesoft.codes?example=block-expansion)\r\n- [Assignments](http://sandbox.jade.talesoft.codes?example=assignments)\r\n- [Comments](http://sandbox.jade.talesoft.codes?example=comments)\r\n- [Code](http://sandbox.jade.talesoft.codes?example=code)\r\n- [Inheritance](http://sandbox.jade.talesoft.codes?example=inheritance)\r\n- [Includes](http://sandbox.jade.talesoft.codes?example=includes)\r\n- [Conditionals](http://sandbox.jade.talesoft.codes?example=conditionals)\r\n- [Loops](http://sandbox.jade.talesoft.codes?example=loops)\r\n- [Interpolation](http://sandbox.jade.talesoft.codes?example=interpolation)\r\n- [Filters](http://sandbox.jade.talesoft.codes?example=filters)\r\n- [Mixin Blocks](http://sandbox.jade.talesoft.codes?example=mixin-blocks)\r\n- [Variadics](http://sandbox.jade.talesoft.codes?example=variadics)\r\n\r\n### Supported Tale Jade Features\r\n\r\n- [Named Mixin Parameters](http://sandbox.jade.talesoft.codes?example=named-mixin-parameters)\r\n- [Attribute Stacking](http://sandbox.jade.talesoft.codes?example=attribute-stacking)\r\n- [Variable Access](http://sandbox.jade.talesoft.codes?example=variable-access)\r\n- [Do/while and for-Loops](http://sandbox.jade.talesoft.codes?example=loops)\r\n\r\n### Other cool features\r\n\r\n- Automatic isset-checks for simple variables with `?`-flag to disable the behavior\r\n- Inbuilt Markdown, CoffeeScript, LESS, SCSS/SASS and Stylus support\r\n- Escapable text for HTML/-PHP-output\r\n- UTF-8 support via PHP's mb_* extension\r\n- Indentation detection and support for any indentation kind you like\r\n- Hackable and customizable renderer, compiler, parser and lexer\r\n- Huge amount of (optional) configuration possibilities\r\n- Graceful compiler forgiving many mistakes (e.g. spaces around the code)\r\n- Lightning fast and clean compilation\r\n- Detailed error handling\r\n- Renderer with different adapters\r\n- Intelligent expression parsing based on bracket counting\r\n- Huge documentation available\r\n- Tested well and maintained actively\r\n\r\n\r\n### There's more to come...\r\n\r\nTale Jade is actively used and developed in many projects and is improved constantly.\r\n\r\nIt doesn't stick to the Jade-convention, but it will always provide compatibility to Node.js Jade to help reducing confusion.\r\n\r\nI love Jade, I love PHP, I love Node.js and I love the official and original Jade-contributors.\r\n\r\n**Planned features:**\r\n- [x] Command line tools\r\n- [ ] Import Attributes (`include some-file(some-var='some-value')`)\r\n- [ ] Helper Libraries (Own custom helper libraries)\r\n- [ ] Aliases (Like mixins, just smaller)\r\n- [ ] Website Kit for easy website creation with Tale Jade\r\n- [x] Stylus integration\r\n- [x] CoffeeScript integration\r\n- [x] Markdown integration\r\n- [ ] Extensions and package manager\r\n\r\n---\r\n\r\n\r\n## Documentation Resources\r\n\r\n[Tale Jade Live Compiler](http://sandbox.jade.talesoft.codes)\r\nA compiler for you to play with in your browser as well as a whole bunch of examples to give you a grasp of what Tale Jade is capable of.\r\n\r\n[The Tale Jade API Docs](http://jade.talesoft.codes/docs)\r\nThe documentation of the Tale Jade source code.\r\nGenerated with phpDocumentor, but is's fairly enlightening.\r\n\r\n[Official Node.js Jade Documentation](http://jade-lang.com)\r\nThe real thing. This is where everything that I do here originates from.\r\nThe syntax is the same, only the code-expressions are different.\r\n\r\n[Tale Jade Bootstrap](https://github.com/Talesoft/tale-jade-bootstrap) \r\nA quick-start project to get you up and running. Fork it, download it, play with it. \r\nDon't forget to run `composer install` before launching ([Download Composer](https://getcomposer.org/download/))\r\n\r\n[Development Test Files](https://github.com/Talesoft/tale-jade-examples)\r\nThe example files I tested the engine with.\r\n\r\n[Tale Jade Unit Tests](https://github.com/Talesoft/tale-jade/tree/master/Test)\r\nThe Unit Tests I'm using to ensure stability.\r\nThere will be new tests added constantly and most features are covered here.\r\nIt's PHP code, though.\r\n\r\n\r\n---\r\n\r\n\r\n## Tale Jade in for your favorite framework\r\n\r\nYou're using a framework with a template engine already, but you really want to try out Jade?\r\nSearch no further.\r\n\r\nThanks to the Tale Jade Community there are some modules for existing frameworks that allow you to use Tale Jade easily!\r\n\r\n### Laravel Framework\r\n- [Official Tale Jade Bridge](http://github.com/Talesoft/tale-jade-laravel)\r\n\r\n### Yii2 Framework\r\n- [jacmoe's Extension](https://github.com/jacmoe/yii2-tale-jade)\r\n\r\n### SimpleMVCFramework\r\n- [Cagatay's SMVC Fork](https://github.com/Talesoft/tale-jade-smvc)\r\n\r\n### CakePHP 3\r\n- [clthck's Plugin](https://github.com/clthck/cakephp-jade)\r\n\r\n### FlightPHP\r\n- [berkus' Integration](https://gist.github.com/berkus/f54347a4a1fd74e9e162)\r\n\r\n### Symphony XSLT CMS\r\n*(This is not the Symfony PHP Framework)*\r\n\r\n- [vdcrea's Jade Editor](http://www.getsymphony.com/download/extensions/view/111595/)\r\n\r\n\r\n**Your framework is missing? [Send me an e-mail](mailto:torben@talesoft.codes) and we'll get a bridge up and running as soon as possible!**\r\n\r\nA great thanks to the contributors of these modules!\r\n\r\n---\r\n\r\n\r\n## Get in touch\r\n\r\nIf you find a bug or miss a function, please use the [Issues](https://github.com/Talesoft/tale-jade/issues) on this page\r\nto tell me about it. I will gladly hear you out :)\r\n\r\nDon't forget to [support my work](https://www.paypal.me/TorbenKoehn) if you like it!\r\n\r\nIf you'd like to contribute, fork, send pull requests and I'll take a deep look at what you've been working at!\r\nTale Jade is completely **Open Source**! You can do anything you like with the code as long as you stick to the\r\n**MIT-license** we've appended. Just keep my name somewhere around!\r\n\r\nYou can also contact me via E-Mail [torben@talesoft.codes](mailto:torben@talesoft.codes)\r\n\r\n\r\n**Thank you for using Tale Jade. Let us spread the Jade-language together!**\r\n\r\n",
  "google": "UA-65722154-2",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}