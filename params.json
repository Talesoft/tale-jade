{"name":"Tale Jade for PHP","tagline":"A complete and fully-functional implementation of the Jade template language for PHP","body":"\r\n\r\n# Tale Jade for PHP\r\n\r\n\r\n[![Build Status](https://travis-ci.org/Talesoft/tale-jade.svg?branch=master)](https://travis-ci.org/Talesoft/tale-jade)\r\n\r\n\r\n> **Finally a fully-functional, complete and clean port of the Jade language to PHP**\r\n>\r\n> *â€” Abraham Lincoln*\r\n\r\n\r\nThe Tale Jade Template Engine brings the popular and powerful Templating-Language [Jade for Node.js](http://jade-lang.com) to PHP!\r\n\r\nTale Jade is the first complete and most powerful Jade implementation in PHP.\r\n\r\n\r\n---\r\n\r\n\r\n## Getting Started\r\n\r\n\r\n### Install with [Composer](https://getcomposer.org)\r\n\r\n[Download Composer](https://getcomposer.org/download/)\r\n\r\nThe composer package for Tale Jade is called [`talesoft/tale-jade`](https://packagist.org/packages/talesoft/tale-jade)\r\n\r\nIf you want to get started right now, hook up [composer](https://getcomposer.org/) and run\r\n\r\n```bash\r\n$ composer require \"talesoft/tale-jade:*\"\r\n$ composer install\r\n```\r\n\r\nor add it to your `composer.json` by yourself\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"talesoft/tale-jade\": \"*\"\r\n    }\r\n}\r\n```\r\n\r\n### Install by downloading the sources\r\n\r\nYou can also download the sources by yourself.\r\n\r\nTale Jade is compatible with the [PSR-0](http://www.php-fig.org/psr/psr-0/) and [PSR-4](http://www.php-fig.org/psr/psr-4/) autoloading standards.\r\n\r\nPut the sources inside your a `Tale/Jade` subfolder inside your autoloading directories, e.g. `library/Tale/Jade` and you're ready to go!\r\n\r\nThe easiest way might be to just put a clone of the repository there, that way you can update it easier\r\n\r\n```bash\r\n$ git clone git@github.com:Talesoft/tale-jade.git library/Tale/Jade\r\n```\r\n\r\nor as a sub-module if you're using git for your project as well\r\n\r\n```bash\r\n$ git submodule add git@github.com:Talesoft/tale-jade.git library/Tale/Jade\r\n```\r\n\r\nYou can also just include all necessary files by yourself if you like\r\n\r\n```php\r\ninclude('path/to/tale-jade/Lexer/Exception.php');\r\ninclude('path/to/tale-jade/Lexer.php');\r\ninclude('path/to/tale-jade/Parser/Exception.php');\r\ninclude('path/to/tale-jade/Parser/Node.php');\r\ninclude('path/to/tale-jade/Parser.php');\r\ninclude('path/to/tale-jade/Compiler/Exception.php');\r\ninclude('path/to/tale-jade/Compiler.php');\r\ninclude('path/to/tale-jade/Renderer.php');\r\ninclude('path/to/tale-jade/Filter.php');\r\ninclude('path/to/tale-jade/Renderer/AdapterBase.php');\r\n\r\n//and the adapter you want to use ('file' by default)\r\ninclude('path/to/tale-jade/Renderer/Adapter/File.php');\r\n\r\n//or\r\ninclude('path/to/tale-jade/Renderer/Adapter/Stream/Wrapper.php');\r\ninclude('path/to/tale-jade/Renderer/Adapter/Stream.php');\r\n\r\n\r\n//optional helper functions\r\ninclude('path/to/tale-jade/functions.php');\r\n```\r\n\r\n\r\n### Rendering a Jade Template\r\n\r\nInclude the `vendor/autoload.php` file of composer in your PHP script and get started with Tale Jade!\r\n\r\n```php\r\n\r\nuse Tale\\Jade;\r\n\r\n//Include the vendor/autoload.php if you're using composer!\r\ninclude('vendor/autoload.php');\r\n\r\n$renderer = new Jade\\Renderer();\r\n\r\necho $renderer->render('your-jade-file');\r\n```\r\n\r\nThis way, the renderer will search for `your-jade-file.jade` in your `get_include_path()`-paths.\r\nNotice that the path passed to `render` needs to be relative, *always*.\r\nWe show you how to add alternative search paths further in the **Basic configuration** section below.\r\n\r\nWhen the Jade-file gets rendered, a `./cache/views`-directory is created automatically and the compiled PHTML will be stored in that directory.\r\n\r\nTo change this directory, use the `path`-option in the `adapterOptions`\r\n\r\n```php\r\n\r\n$renderer = new Jade\\Renderer([\r\n    'adapterOptions' => [\r\n        'path' => '/your/absolute/cache/path'\r\n    ]\r\n]);\r\n```\r\n\r\n\r\nThe Jade-file will now be rendered to that directory on each call.\r\n\r\nTo enable a cache that won't render the files on each call, use the `lifeTime` option of the `file`-adapter\r\n\r\n\r\n```php\r\n\r\n$renderer = new Jade\\Renderer([\r\n    'adapterOptions' => [\r\n        'lifeTime' => 3600 //Will cache the file for 3600 seconds (one hour)\r\n    ]\r\n]);\r\n```\r\n\r\n\r\n### Basic configuration\r\n\r\n\r\nTo enable formatting of the PHTML-output, use the `pretty`-option\r\n\r\n```php\r\n\r\n$renderer = new Jade\\Renderer([\r\n    'pretty' => true\r\n]);\r\n```\r\n\r\n\r\nIf you don't want to use the `get_include_path()`-paths (which could actually harbor a security risk in some cases), pass your own search paths to the Renderer.\r\nRendered and included Jade-files will be searched in those paths and not in the `get_include_path()`-paths anymore.\r\n\r\n```php\r\n\r\n//Either with\r\n$renderer = new Jade\\Renderer([\r\n    'paths' => [__DIR__.'/views']\r\n]);\r\n\r\n//or with\r\n$renderer->addPath(__DIR__.'/views');\r\n```\r\n\r\nAs soon as you pass *any* path, the loading from the `get_include_path()`-paths will be disabled and you always load from your passed directory/ies.\r\n\r\nTo pass variables to your Jade-file, use the second argument of the `render`-method\r\n\r\n```php\r\n\r\necho $renderer->render('index', [\r\n    'title' => 'Jade is awesome!',\r\n    'content' => 'Oh yeah, it is.'\r\n]);\r\n```\r\n\r\nThese can be used inside Jade as normal variables\r\n\r\n```jade\r\n\r\nh1= $title\r\n\r\n+content-block($content)\r\n```\r\n\r\n---\r\n\r\n\r\n## Supported features\r\n\r\nWe support every single feature the [original Jade implementation](http://jade-lang.com/reference/) supports!\r\nThis always has been and will always be our main target.\r\n\r\n**But why stop there?**\r\nPHP has it's own features that are surely different from JavaScript's.\r\nBy utilizing those features we aim to bring in more, compatible features into the language to make the fastest template development ever possible!\r\n\r\n---\r\n\r\n\r\n### Supported official Node.js Jade Features\r\n\r\n- [Tags](http://jade.talesoft.io/examples/tags)\r\n\r\n```jade\r\nnav\r\n    ul\r\n        li: a(href='#')\r\n        li: a(href='#')\r\n        li: a(href='#')\r\n```\r\n\r\n- [Classes](http://jade.talesoft.io/examples/classes)\r\n\r\n```jade\r\ndiv.row\r\n    .col-md-6.col-sm-6\r\n        p First half\r\n    .col-md-6.col-sm-6\r\n        p Second half\r\n```\r\n\r\n- [IDs](http://jade.talesoft.io/examples/ids)\r\n\r\n```jade\r\nform#mainForm\r\n    \r\n    .form-group\r\n        input.input-lg#userNameInput(name='userName')\r\n    \r\n    .form-group\r\n        input.input-lg#passwordInput(name='password')\r\n        \r\n    button#submitButton(type='submit')\r\n```\r\n\r\n- [Doctypes](http://jade.talesoft.io/examples/doctypes)\r\n\r\n```jade\r\ndoctype html\r\ndoctype 5\r\n//- will compile to <!DOCTYPE html>\r\n\r\ndoctype xml\r\n//- will compile to <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n```\r\n\r\n- [Attributes](http://jade.talesoft.io/examples/attributes)\r\n\r\n```jade\r\n\r\na(href='/my/path.html', target='_blank')\r\n\r\n.col(class=col-md-6, class='col-sm-6')\r\n//- will compile to <div class=\"col col-md-6 col-sm-6\"></div>\r\n```\r\n\r\n- [Mixins](http://jade.talesoft.io/examples/mixins)\r\n\r\n```jade\r\n\r\nmixin custom-button(label, theme= 'default')\r\n    a.btn(class='btn-#{$theme}')= $label\r\n    \r\n+custom-button('Button A')\r\n+custom-button('Button B')\r\n```\r\n\r\n- [Blocks (with prepend, append and replace support)](http://jade.talesoft.io/examples/blocks)\r\n\r\n```jade\r\n\r\nblock scripts\r\n    script(src='/js/jquery.js')\r\n    \r\nappend scripts\r\n    script(src='/js/plugin.jquery.js')\r\n    script(src='/js/plugin-2.jquery.js')\r\n    \r\nreplace scripts\r\n    //- rather take another framework?!\r\n    script(src='/js/mootools.js')\r\n```\r\n\r\n- [Expressions & Escaping](http://jade.talesoft.io/examples/expressions)\r\n\r\n```jade\r\n\r\np= $greeting\r\n\r\np!= $someVariableContainingHTML\r\n\r\ninput(value=$defaultValue)\r\n```\r\n\r\n- [Block Expansion](http://jade.talesoft.io/examples/block-expansion)\r\n\r\n```jade\r\nli: a(href='#'): i.fa.fa-gear\r\n\r\nif $something: p Do Something\r\n```\r\n\r\n- [Cross Assignments (&attributes)](http://jade.talesoft.io/examples/assignments)\r\n\r\n```jade\r\n//- Other than the official Node.js, this works with any attribute\r\n//- The official &attributes is not implemented fully right now\r\n\r\na&classes('btn', 'btn-default')\r\n\r\na&classes($classesFromScript)\r\n\r\na&href('http://host', '/sub-url', '/file.html')\r\n\r\n$stylesArray= ['width' => '100%', 'background' => 'red']\r\ndiv&styles($stylesArray)\r\n```\r\n\r\n- [Comments](http://jade.talesoft.io/examples/comments)\r\n\r\n```jade\r\n\r\n//- This will be compiled to a PHP comment and will not be visible in client output\r\n\r\n// This will be compiled to a HTML comment and will be visible in client output\r\n\r\n//\r\n    you can easily\r\n    go one level deeper\r\n    and span a comment\r\n    across multiple\r\n    lines\r\n```\r\n\r\n- [Inline Code](http://jade.talesoft.io/examples/code)\r\n\r\n```jade\r\n\r\n<?php $i = 15; ?>\r\np Do something\r\n- $i = 100\r\np Do something else\r\n-\r\n    $i = [\r\n        'a',\r\n        'b',\r\n        'c'\r\n    ]\r\n```\r\n\r\n- [Inheritance](http://jade.talesoft.io/examples/inheritance)\r\n\r\n```jade\r\n\r\nextends layouts/master\r\n\r\nblock content\r\n    p This here will replace the \"content\"-block in the master-layout!\r\n```\r\n\r\n- [Includes (with filters)](http://jade.talesoft.io/examples/includes)\r\n\r\n```jade\r\n\r\ninclude some-jade-file\r\n\r\ninclude some-php-file.php\r\n// will be compiled to <?php ?> correctly\r\n\r\ninclude some-css-file.css\r\n// will be compiled to <style>..included content...</style>\r\n\r\ninclude some-js-file.js\r\n// will be compiled to <script>...included content...</script>\r\n```\r\n\r\n- [Conditionals (if, else, elseif, case, when, unless)](http://jade.talesoft.io/examples/conditionals)\r\n\r\n```jade\r\n\r\nif $something\r\n    p Do something\r\nelse\r\n    p Do something else\r\n    \r\nunless $error\r\n    p.success Success!\r\n    \r\ncase $someState\r\n    when 'state-1': p Do anything\r\n    when 'state-2'\r\n        p Do some larger thing\r\n    default\r\n        p Do the default thing\r\n```\r\n\r\n- [Loops (each, while)](http://jade.talesoft.io/examples/loops)\r\n\r\n```jade\r\n\r\neach $item, $key in $items\r\n    p Item at #{$key} is #{$item}!\r\n    \r\nwhile $i < 100\r\n    p Do something until $i is 100\r\n    - $i++\r\n```\r\n\r\n- [Interpolation (with Element Interpolation)](http://jade.talesoft.io/examples/interpolation)\r\n\r\n```jade\r\n\r\np Hello, #{$user->name}, how are you today?\r\n\r\np.\r\n    I'm in a really long text, but I need a link!\r\n    I can simply use #[a(href='jade-interpolation.html') Jade Interpolation!]\r\n```\r\n\r\n- [Filters](http://jade.talesoft.io/examples/filters)\r\n\r\n```jade\r\n\r\n:css\r\n    body, html {\r\n        height: 100%;\r\n    }\r\n    \r\n:js\r\n    do.something();\r\n    \r\n    \r\n:php\r\n    \r\n    function someFunc() {\r\n        // Do something\r\n    }\r\n```\r\n\r\n- [Mixin Blocks](http://jade.talesoft.io/examples/mixin-blocks)\r\n\r\n```jade\r\n\r\nmixin article(title= 'Untitled')\r\n    header.article-header= $title\r\n    article\r\n        if block\r\n            block\r\n        else\r\n            p No content for this article :(\r\n            \r\n+article('Article 1')\r\n    p The content of my first article\r\n    \r\n+article('Article 2')\r\n    p The content of my second article\r\n```\r\n\r\n- [Variadics](http://jade.talesoft.io/examples/variadics)\r\n\r\n```jade\r\n\r\nmixin post-list(...posts)\r\n    each $post in $posts\r\n        header= $post->title\r\n        article= $post->content\r\n        \r\n        \r\n+post-list($post1, $post2, $post3, $post4)\r\n```\r\n\r\n\r\n### Supported Tale Jade Features\r\n\r\n- [Named Mixin Parameters](http://jade.talesoft.io/examples/named-parameters)\r\n\r\n```jade\r\n\r\nmixin table(searchQuery, page= 0, amount= 100, order='id:asc')\r\n\ttable\r\n\t\t//... something\r\n\r\n\r\n+table('search query', order='id:desc')\r\n```\r\n\r\n- [Attribute Stacking](http://jade.talesoft.io/examples/attribute-stacking)\r\n\r\n```jade\r\n\r\na(href='http://host', href='/path', href='/file')\r\n// will compile to <a href=\"http://host/path/file\"></a>\r\n\r\na(class='btn', class='btn-default', class='btn-lg')\r\n// will compile to <a class=\"btn btn-default btn-lg\"></a>\r\n\r\ndiv(style='width: 100%', style='height: 50%', style='background: red')\r\n// will compile to <div style=\"width: 100%; height: 50%; background: red\"></div>\r\n```\r\n\r\n- [Filter Maps](http://jade.talesoft.io/examples/filter-map)\r\nSee filters above. Official Node.js doesn't do filter-mapping based on file-extensions.\r\n\r\n- [Cross Assignments](http://jade.talesoft.io/examples/cross-assignments)\r\nSee assignments above. They are quite more dynamic than the official implementation.\r\n\r\n- [Direct Variable Access](http://jade.talesoft.io/examples/direct-variable-access)\r\n\r\n```jade\r\n\r\n$i= 100\r\n\r\n$array(key1='value1', key2='value2')\r\n\r\n$array(key3='value3')\r\n\r\n//$array will be a merged array from all the attributes above\r\n\r\n$i\r\n//Will compile to print $i\r\n\r\n```\r\n\r\n- [More Loops (do-while, for)](http://jade.talesoft.io/examples/more-loops)\r\n\r\n```jade\r\n\r\n$i= 0\r\ndo\r\n    p Do something with #{$i}\r\n    $i= $i + 1\r\nwhile $i < 100\r\n\t\r\n\r\nfor $i = 0; $i < 100; $i++\r\n\tp Do something with #{$i}\r\n```\r\n\r\n\r\n### Other, unrelated, cool features\r\n\r\n- UTF-8 support via PHP's mb_* extension\r\n- Hackable and customizable renderer, compiler, parser and lexer\r\n- Huge amount of (optional) configuration possibilities\r\n- Graceful compiler forgiving many mistakes (e.g. spaces around the code)\r\n- Lightning fast and clean compilation\r\n- Detailed error handling\r\n- Renderer with different adapters (ease-of-use vs. performance)\r\n- Intelligent expression parsing\r\n- Huge documentation available\r\n- Tested well and maintained actively\r\n\r\n\r\n### There's more to come...\r\n\r\nTale Jade is actively used and developed in many projects and is improved constantly.\r\n\r\nWe don't stick to the Jade-convention, but we'll always provide compatibility to Node.js Jade to help reducing confusion.\r\n\r\nWe love Jade, we love PHP, we love Node.js and we love the official and original Jade-contributors.\r\nWe just don't love the way people implement existing stuff in PHP :)\r\n\r\nPlanned features:\r\n- [ ] Command line tools\r\n- [ ] Import Attributes (`include some-file(some-var='some-value')`)\r\n- [ ] Helper Libraries (Own custom helper libraries)\r\n- [ ] Aliases (Like mixins, just smaller)\r\n- [ ] Stylus integration\r\n- [ ] CoffeeScript integration\r\n- [ ] Markdown integration\r\n- [ ] Extensions and package manager\r\n\r\n---\r\n\r\n\r\n## Documentation Resources\r\n\r\n\r\n***Notice: Sorry that most documents are down right now, we're still working on them. We added some examples so you know how all features work.***\r\n***Want to help us? [E-Mail us!](mailto:info@talesoft.io)!***\r\n\r\nThe only difference between Node.js Jade and Tale Jade is, that Tale Jade uses PHP Expressions everywhere\r\n\r\nIn loops:\r\n`each $itemName, $keyName in $items`\r\n\r\nIn attributes:\r\n`a(href=$url, href='/some/sub/path')`\r\n\r\nIn conditionals:\r\n`if $someCondition`\r\n\r\nIn interpolation:\r\n`| This is some text and this was #{$interpolated}!`\r\n\r\nPHP Expressions are possible in most cases \r\ne.g. `(empty($someVar) ? 'Default Value' : \"$someVar!\")`\r\nand you can use functions and classes normally\r\ne.g. `h1= strtoupper('Tale Jade is awesome!')`\r\n\r\n\r\n\r\n[Official Node.js Jade Documentation](http://jade-lang.com)\r\nThe real thing. This is where everything that we do here originates from.\r\nThe syntax is the same, only the code-expressions are different.\r\n\r\n[The Tale Jade API Docs](http://jade.talesoft.io/docs)\r\nThe documentation of the Tale Jade source code.\r\nGenerated with phpDocumentor, but is's fairly enlightening.\r\n\r\n[Tale Jade Bootstrap](https://github.com/Talesoft/tale-jade-bootstrap) \r\nA quick-start project to get you up and running. Fork it, download it, play with it. \r\nDon't forget to run `composer install` before launching ([Download Composer](https://getcomposer.org/download/))\r\n\r\n[Development Test Files](https://github.com/Talesoft/tale-jade-examples)\r\nThe example files we tested the engine with.\r\nWe cover all features somewhere in there, for sure!\r\n\r\n[Tale Jade Unit Tests](https://github.com/Talesoft/tale-jade/tree/master/Test)\r\nThe Unit Tests we're using to ensure stability.\r\nThere will be new tests added constantly and most features are covered here.\r\nIt's PHP code, though.\r\n\r\n\r\n---\r\n\r\n\r\n## Tale Jade in other Projects\r\n\r\nYou're using a framework with a template engine already, but you really want to try out Jade?\r\nSearch no further.\r\n\r\nThanks to the Tale Jade Community we got some modules for existing frameworks that allow you to use Tale Jade easily!\r\n\r\n### Laravel Framework\r\n- [Official Tale Jade Bridge](http://github.com/Talesoft/tale-jade-laravel)\r\n\r\n### Yii2 Framework\r\n- [jacmoe's Extension](http://www.yiiframework.com/extension/yii2-tale-jade/)\r\n\r\n### SimpleMVCFramework\r\n- [cu's SMVC Fork](https://github.com/Talesoft/tale-jade-smvc)\r\n\r\n**Your framework is missing? [Send us an e-mail](mailto:info@talesoft.io) and we'll get a bridge up and running as soon as possible!**\r\n\r\nA great thanks to the contributors of these modules!\r\n\r\n---\r\n\r\n\r\n## Get in touch\r\n\r\nIf you find a bug or miss a function, please use the [Issues](https://github.com/Talesoft/tale-jade/issues) on this page\r\nto tell us about it. We will gladly hear you out :)\r\n\r\nIf you'd like to contribute, fork us, send us pull requests and we'll take a deep look at what you've been working at!\r\nWe're completely **Open Source**! You can do anything you like with our code as long as you stick to the\r\n**MIT-license** we've appended.\r\n\r\nYou can also contact us via E-Mail.\r\n\r\nIf you're interested in other projects, you might contact us via E-Mail as well\r\n\r\n**E-Mail: [info@talesoft.io](mailto:info@talesoft.io)**\r\n\r\n\r\n**Thank you for using Tale Jade. Let us spread the Jade-language together!**\r\n\r\n","google":"UA-65722154-2","note":"Don't delete this file! It's used internally to help with page regeneration."}